@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<style type="text/css">
    .dropdown-menu {
        min-width: 20em !important;
    }
</style>

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserAsync(User).Result.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Search", "Flights", new { area = "" })">
                <button class="btn btn-primary" type="submit">Logout</button>
            </form>

        </li>
    }
    else
    {
        <li class="nav-item">
            <div class="btn-group">
                <button type="button" class="nav-link btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" id="btnRegister">
                    Register
                </button>
                <div class="dropdown-menu dropdown-menu-lg-right p-4">
                    <partial name="RegisterModal" model="null" />
                </div>
            </div>
        </li>
        <li class="nav-item">
            <div class="btn-group">
                <button type="button" class="nav-link btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" id="btnLogin">
                    Login
                </button>
                <div class="dropdown-menu dropdown-menu-lg-right p-4">
                    <partial name="LoginModal" model="null" />
                </div>
            </div>
        </li>
    }
    @if ((await AuthorizationService.AuthorizeAsync(User, "ReqWebAdmin")).Succeeded)
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="" asp-controller="Companies" asp-action="Index">Show Companies</a>
        </li>
    }
</ul>
