@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserAsync(User).Result.Name!</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">Logout</a>
        </li>
        }
        else
        {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login" id="btnLogin">Login</a>
        </li>
        }
        @if ((await AuthorizationService.AuthorizeAsync(User, "ReqWebAdmin")).Succeeded)
        {
        <li class="nav-item">
            <a class="nav-link" asp-area="" asp-controller="Companies" asp-action="Index">Show Companies</a>
        </li>
        }
    </ul>
