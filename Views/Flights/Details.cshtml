@model WebApplication1.Models.Flight

@{
    ViewData["Title"] = "Details";

    var colGroup = Model.Seats.GroupBy(x => x.Col).ToList();
    List<List<Seat>> seatList = new List<List<Seat>>();
    for (int i = 0; i < colGroup.Count; i++)
    {
        List<Seat> row = new List<Seat>();
        colGroup[i].ToList().ForEach(x => row.Add(new Seat { Id = x.Id, Col = x.Col, Row = x.Row, Availability = x.Availability }));
        seatList.Add(row);
    }
}

<style type="text/css">
    .plane {
        margin: 20px auto;
        max-width: 300px;
        display: inline-block;
        margin: 0 auto;
    }

    .cockpit {
        height: 250px;
        position: relative;
        overflow: hidden;
        text-align: center;
        border-bottom: 5px solid #d8d8d8;
    }

        .cockpit:before {
            content: "";
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            height: 500px;
            width: 100%;
            border-radius: 50%;
            border-right: 5px solid #d8d8d8;
            border-left: 5px solid #d8d8d8;
        }

        .cockpit h1 {
            width: 60%;
            margin: 100px auto 35px auto;
        }

    .exit {
        position: relative;
        height: 50px;
    }

        .exit:before, .exit:after {
            content: "EXIT";
            font-size: 14px;
            line-height: 18px;
            padding: 0px 2px;
            font-family: "Arial Narrow", Arial, sans-serif;
            display: block;
            position: absolute;
            background: green;
            color: white;
            top: 50%;
            transform: translate(0, -50%);
        }

        .exit:before {
            left: 0;
        }

        .exit:after {
            right: 0;
        }

    .fuselage {
        border-right: 5px solid #d8d8d8;
        border-left: 5px solid #d8d8d8;
    }

    ol {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .seats {
        display: flex;
        margin-left: 23px;
        flex-direction: row;
        flex-wrap: nowrap;
        justify-content: flex-start;
    }

    .seat {
        display: flex;
        flex: 0 0 14.28571428571429%;
        padding: 5px;
        position: relative;
    }

        .seat:nth-child(3) {
            margin-right: 14.28571428571429%;
        }

        .seat input[type=checkbox] {
            position: absolute;
            opacity: 0;
        }

            .seat input[type=checkbox]:checked + label {
                background: #bada55;
                -webkit-animation-name: rubberBand;
                animation-name: rubberBand;
                animation-duration: 300ms;
                animation-fill-mode: both;
            }

        .seat label {
            display: block;
            position: relative;
            width: 100%;
            text-align: center;
            font-size: 14px;
            font-weight: bold;
            line-height: 1.5rem;
            padding: 4px 0;
            background: #F42536;
            border-radius: 5px;
            animation-duration: 300ms;
            animation-fill-mode: both;
        }

            .seat label:before {
                content: "";
                position: absolute;
                width: 75%;
                height: 75%;
                top: 1px;
                left: 50%;
                transform: translate(-50%, 0%);
                background: rgba(255, 255, 255, 0.4);
                border-radius: 3px;
            }

            .seat label:hover {
                cursor: pointer;
                box-shadow: 0 0 0px 2px #5C6AFF;
            }

    @@-webkit-keyframes rubberBand {
        0% {
            -webkit-transform: scale3d(1, 1, 1);
            transform: scale3d(1, 1, 1);
        }

        30% {
            -webkit-transform: scale3d(1.25, 0.75, 1);
            transform: scale3d(1.25, 0.75, 1);
        }

        40% {
            -webkit-transform: scale3d(0.75, 1.25, 1);
            transform: scale3d(0.75, 1.25, 1);
        }

        50% {
            -webkit-transform: scale3d(1.15, 0.85, 1);
            transform: scale3d(1.15, 0.85, 1);
        }

        65% {
            -webkit-transform: scale3d(0.95, 1.05, 1);
            transform: scale3d(0.95, 1.05, 1);
        }

        75% {
            -webkit-transform: scale3d(1.05, 0.95, 1);
            transform: scale3d(1.05, 0.95, 1);
        }

        100% {
            -webkit-transform: scale3d(1, 1, 1);
            transform: scale3d(1, 1, 1);
        }
    }

    @@keyframes rubberBand {
        0% {
            -webkit-transform: scale3d(1, 1, 1);
            transform: scale3d(1, 1, 1);
        }

        30% {
            -webkit-transform: scale3d(1.25, 0.75, 1);
            transform: scale3d(1.25, 0.75, 1);
        }

        40% {
            -webkit-transform: scale3d(0.75, 1.25, 1);
            transform: scale3d(0.75, 1.25, 1);
        }

        50% {
            -webkit-transform: scale3d(1.15, 0.85, 1);
            transform: scale3d(1.15, 0.85, 1);
        }

        65% {
            -webkit-transform: scale3d(0.95, 1.05, 1);
            transform: scale3d(0.95, 1.05, 1);
        }

        75% {
            -webkit-transform: scale3d(1.05, 0.95, 1);
            transform: scale3d(1.05, 0.95, 1);
        }

        100% {
            -webkit-transform: scale3d(1, 1, 1);
            transform: scale3d(1, 1, 1);
        }
    }

    .rubberBand {
        -webkit-animation-name: rubberBand;
        animation-name: rubberBand;
    }
</style>

@if (User.IsInRole("WebAdmin") || User.IsInRole("CompAdmin"))
{
    <style>
        .textcolor {
            color: lightgrey;
        }
    </style>
}
else
{
    <style>
        .textcolor {
            color: black;
        }
    </style>
}

<h3 class="textcolor">Flight Details</h3>

<div class="row">
    <hr />
    <table class="table">

        <tr class="row">
            <td>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Name)
                </dt>
                <dd class="col-sm-6 textcolor">
                    @Html.DisplayFor(model => model.Name)
                </dd>
                <dt class="col-sm-6">
                    @*@Html.DisplayNameFor(model => model.RefundTime)*@Refund Time
                </dt>
                <dd class="col-sm-6 textcolor">
                    @Html.DisplayFor(model => model.RefundTime)
                </dd>
                <dt class="col-sm-6">
                    @*@Html.DisplayNameFor(model => model.ResCancelTime)*@Res. Cancel Time
                </dt>
                <dd class="col-sm-6 textcolor">
                    @Html.DisplayFor(model => model.ResCancelTime)
                </dd>
                <dt class="col-sm-6">
                    @*@Html.DisplayNameFor(model => model.RefundPortion)*@Refund Portion
                </dt>
                <dd class="col-sm-6 textcolor">
                    @Html.DisplayFor(model => model.RefundPortion)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Date)
                </dt>
                <dd class="col-sm-6 textcolor">
                    @Html.DisplayFor(model => model.Date)
                </dd>
                <dt class="col-sm-6">
                    @*@Html.DisplayNameFor(model => model.FlightNo)*@Flight No
                </dt>
                <dd class="col-sm-6 textcolor">
                    @Html.DisplayFor(model => model.FlightNo)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Organizer)
                </dt>
                <dd class="col-sm-6 textcolor">
                    @Html.DisplayFor(model => model.Organizer.Description)
                </dd>
            </td>
            <td class="col-sm-6 plane">
                <div class="cockpit">
                    <h1>Selected Seats</h1>
                </div>
                <div class="exit exit--front fuselage">

                </div>
                <ol class="cabin fuselage">
                    @for (int i = 0; i < seatList.Count; i++)
                    {
                        <li class="row row--@i">
                            <ol class="seats" type="A">
                                @for (int j = 0; j < seatList[i].Count; j++)
                                {
                                    <li class="seat">
                                        @if (@seatList[i][j].Availability)
                                        {
                                            <input type="checkbox" value="@seatList[i][j].Availability" id="@(seatList[i][j].Col + seatList[i][j].Row.ToUpper())" checked disabled />
                                        }
                                        else
                                        {
                                            <input type="checkbox" value="@seatList[i][j].Availability" id="@(seatList[i][j].Col + seatList[i][j].Row.ToUpper())" disabled />
                                        }
                                        <label for="@(seatList[i][j].Col + seatList[i][j].Row.ToUpper())" style="color:midnightblue;">'@(seatList[i][j].Col + seatList[i][j].Row.ToUpper())'</label>
                                    </li>
                                }
                            </ol>
                        </li>
                    }
                </ol>
                <div class="exit exit--back fuselage">

                </div>
            </td>
        </tr>
    </table>
</div>

<div class="row">
    @if ((await AuthorizationService.AuthorizeAsync(User, "ReqAdmin")).Succeeded)
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit </a><label> | </label>
        @if (User.IsInRole("WebAdmin"))
            @Html.ActionLink("Add Offer", "CreateForEvent", "Offers", new { EventId = Model.Id, Flightno = Model.RouteId }, null)
        @if ((bool)ViewData["samecomp"] == true)
        {
            @Html.ActionLink("Add Offer", "CreateForEvent", "Offers", new { EventId = Model.Id, Flightno = Model.RouteId }, null)
        }
    }
    <label> | </label><a asp-action="Index"> Back to List</a>
</div>

<div class="row" id="accordion">
    <div class="card">
        <div class="card-header" id="headingRes">
            <h5 class="mb-0">
                <button class="btn btn-link" data-toggle="collapse" data-target="#collapseRes" aria-expanded="true" aria-controls="collapseRes">
                    Reservations
                </button>
            </h5>
        </div>
        <div class="collapse" id="collapseRes" aria-labelledby="headingRes" data-parent="#accordion">
            <div class="card-body">
                <table class="table">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">Seat</th>
                            <th scope="col">Name Surname</th>
                            <th scope="col">IsChild</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Reservations.ToList())
                        {
                            <tr>
                                <th scope="row">@item.Seats.ToArray()[0].Col@item.Seats.ToArray()[0].Row.ToUpper()</th>
                                <td>@item.Owner.Name @item.Owner.Surname</td>
                                <td>@item.isChild</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header" id="headingTic">
            <h5 class="mb-0">
                <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseTic" aria-expanded="true" aria-controls="collapseTic">
                    Tickets
                </button>
            </h5>
        </div>
        <div class="collapse" id="collapseTic" aria-labelledby="headingTic" data-parent="#accordion">
            <div class="card-body">
                <table class="table">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">Seat</th>
                            <th scope="col">Name Surname</th>
                            <th scope="col">IsChild</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Tickets.ToList())
                        {
                            if (item.Seats.Count > 0)
                            {
                                <tr>
                                    <th scope="row">@item.Seats.ToArray()[0].Col@item.Seats.ToArray()[0].Row.ToUpper()</th>
                                    <td>@item.Owner.Name @item.Owner.Surname</td>
                                    <td>@item.isChild</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>