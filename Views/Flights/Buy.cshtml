@model WebApplication1.Controllers.FlightsController.InputModel

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js" type="text/javascript"></script>

    <meta name="viewport" content="width=device-width">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">

    <style type="text/css">

        /* The sidebar menu */
        .sidenav {
            width: 400px;
            position: fixed;
            z-index: 1;
            top: 20px;
            left: 10px;
            background: #eee;
            overflow-x: hidden;
            padding: 8px 0;
        }

            /* The navigation menu links */
            .sidenav a {
                padding: 6px 8px 6px 16px;
                text-decoration: none;
                font-size: 25px;
                color: #818181;
                display: block;
            }

                /* When you mouse over the navigation links, change their color */
                .sidenav a:hover {
                    color: #f1f1f1;
                }

        /* Style page content */
        .main {
            margin-left: 160px; /* Same as the width of the sidebar */
            padding: 0px 10px;
        }

        /* On smaller screens, where height is less than 450px, change the style of the sidebar (less padding and a smaller font size) */
        @@media screen and (max-height: 450px) {
            .sidenav {
                padding-top: 15px;
            }

                .sidenav a {
                    font-size: 18px;
                }
        }

        *, *:before, *:after {
            box-sizing: border-box;
        }

        html {
            font-size: 16px;
        }

        .plane {
            margin: 20px auto;
            max-width: 300px;
        }

        .cockpit {
            height: 250px;
            position: relative;
            overflow: hidden;
            text-align: center;
            border-bottom: 5px solid #d8d8d8;
        }

            .cockpit:before {
                content: "";
                display: block;
                position: absolute;
                top: 0;
                left: 0;
                height: 500px;
                width: 100%;
                border-radius: 50%;
                border-right: 5px solid #d8d8d8;
                border-left: 5px solid #d8d8d8;
            }

            .cockpit h1 {
                width: 60%;
                margin: 100px auto 35px auto;
            }

        .exit {
            position: relative;
            height: 50px;
        }

            .exit:before, .exit:after {
                content: "EXIT";
                font-size: 14px;
                line-height: 18px;
                padding: 0px 2px;
                font-family: "Arial Narrow", Arial, sans-serif;
                display: block;
                position: absolute;
                background: green;
                color: white;
                top: 50%;
                transform: translate(0, -50%);
            }

            .exit:before {
                left: 0;
            }

            .exit:after {
                right: 0;
            }

        .fuselage {
            border-right: 5px solid #d8d8d8;
            border-left: 5px solid #d8d8d8;
        }

        ol {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .seats {
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
            justify-content: flex-start;
        }

        .seat {
            display: flex;
            flex: 0 0 14.28571428571429%;
            padding: 5px;
            position: relative;
        }

            .seat:nth-child(3) {
                margin-right: 14.28571428571429%;
            }

            .seat input[type=checkbox] {
                position: absolute;
                opacity: 0;
            }

                .seat input[type=checkbox]:checked + label {
                    background: #bada55;
                    -webkit-animation-name: rubberBand;
                    animation-name: rubberBand;
                    animation-duration: 300ms;
                    animation-fill-mode: both;
                }

                .seat input[type=checkbox]:disabled + label {
                    background: #dddddd;
                    text-indent: -9999px;
                    overflow: hidden;
                }

                    .seat input[type=checkbox]:disabled + label:after {
                        content: "X";
                        text-indent: 0;
                        position: absolute;
                        top: 4px;
                        left: 50%;
                        transform: translate(-50%, 0%);
                    }

                    .seat input[type=checkbox]:disabled + label:hover {
                        box-shadow: none;
                        cursor: not-allowed;
                    }

            .seat label {
                display: block;
                position: relative;
                width: 100%;
                text-align: center;
                font-size: 14px;
                font-weight: bold;
                line-height: 1.5rem;
                padding: 4px 0;
                background: #F42536;
                border-radius: 5px;
                animation-duration: 300ms;
                animation-fill-mode: both;
            }

                .seat label:before {
                    content: "";
                    position: absolute;
                    width: 75%;
                    height: 75%;
                    top: 1px;
                    left: 50%;
                    transform: translate(-50%, 0%);
                    background: rgba(255, 255, 255, 0.4);
                    border-radius: 3px;
                }

                .seat label:hover {
                    cursor: pointer;
                    box-shadow: 0 0 0px 2px #5C6AFF;
                }

        @@-webkit-keyframes rubberBand {
            0% {
                -webkit-transform: scale3d(1, 1, 1);
                transform: scale3d(1, 1, 1);
            }

            30% {
                -webkit-transform: scale3d(1.25, 0.75, 1);
                transform: scale3d(1.25, 0.75, 1);
            }

            40% {
                -webkit-transform: scale3d(0.75, 1.25, 1);
                transform: scale3d(0.75, 1.25, 1);
            }

            50% {
                -webkit-transform: scale3d(1.15, 0.85, 1);
                transform: scale3d(1.15, 0.85, 1);
            }

            65% {
                -webkit-transform: scale3d(0.95, 1.05, 1);
                transform: scale3d(0.95, 1.05, 1);
            }

            75% {
                -webkit-transform: scale3d(1.05, 0.95, 1);
                transform: scale3d(1.05, 0.95, 1);
            }

            100% {
                -webkit-transform: scale3d(1, 1, 1);
                transform: scale3d(1, 1, 1);
            }
        }

        @@keyframes rubberBand {
            0% {
                -webkit-transform: scale3d(1, 1, 1);
                transform: scale3d(1, 1, 1);
            }

            30% {
                -webkit-transform: scale3d(1.25, 0.75, 1);
                transform: scale3d(1.25, 0.75, 1);
            }

            40% {
                -webkit-transform: scale3d(0.75, 1.25, 1);
                transform: scale3d(0.75, 1.25, 1);
            }

            50% {
                -webkit-transform: scale3d(1.15, 0.85, 1);
                transform: scale3d(1.15, 0.85, 1);
            }

            65% {
                -webkit-transform: scale3d(0.95, 1.05, 1);
                transform: scale3d(0.95, 1.05, 1);
            }

            75% {
                -webkit-transform: scale3d(1.05, 0.95, 1);
                transform: scale3d(1.05, 0.95, 1);
            }

            100% {
                -webkit-transform: scale3d(1, 1, 1);
                transform: scale3d(1, 1, 1);
            }
        }

        .rubberBand {
            -webkit-animation-name: rubberBand;
            animation-name: rubberBand;
        }
    </style>
</head>


<body>
    <h3>Buy ticket</h3>
    <div class="container">
        <div class="row">

            <form asp-action="Buy" id="Buy">
                <div class="plane">
                    <div class="cockpit">
                        <h1>Please select a seat</h1>
                    </div>
                    <div class="exit exit--front fuselage">

                    </div>
                    <ol class="cabin fuselage">
                        @for (int i = 0; i < Model.seats.Count; i++)
                        {
                            <li class="row row--@i">
                                <ol class="seats" type="A">
                                    @for (int j = 0; j < Model.seats[i].Count; j++)
                                    {
                                        <li class="seat">
                                            @{
                                                object enabled = Model.seats[i][j].Availability == true ? null : new { disabled = "disabled" };
                                            }
                                            @if (Model.seats[i][j].Availability)
                                            {
                                                <input type="checkbox" asp-for="@Model.seats[i][j].Availability" id="@(Model.seats[i][j].Col + Model.seats[i][j].Row.ToUpper())" />
                                            }
                                            else
                                            {
                                                <input type="checkbox" asp-for="@Model.seats[i][j].Availability" id="@(Model.seats[i][j].Col + Model.seats[i][j].Row.ToUpper())" disabled />
                                            }
                                            <label for="@(Model.seats[i][j].Col + Model.seats[i][j].Row.ToUpper())">'@(Model.seats[i][j].Col + Model.seats[i][j].Row.ToUpper())'</label>
                                        </li>
                                        <input type="hidden" asp-for="@Model.seats[i][j].Id" />
                                    }
                                </ol>
                            </li>
                        }
                    </ol>
                    <div class="exit exit--back fuselage">

                    </div>
                </div>
                <div class="sidenav">
                    <div>
                        <hr />
                        <dl class="row">
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.flightInfo.Organizer)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.flightInfo.Organizer.Description)
                            </dd>
                            <dt class="col-sm-2">
                                @*@Html.DisplayNameFor(model => model.FlightNo)*@Flight No
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.flightInfo.FlightNo)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.flightInfo.Name)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.flightInfo.Name)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.flightInfo.Date)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.flightInfo.Date)
                            </dd>
                        </dl>
                    </div>

                    <button onclick="myFunction()" class="btn btn-info">Extra Info </button>
                    <div id="myDIV" style="display: none">

                        <hr />
                        <dl class="row">

                            <dt class="col-sm-2">
                                @*@Html.DisplayNameFor(model => model.RefundTime)*@Refund Time
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.flightInfo.RefundTime)
                            </dd>
                            <dt class="col-sm-2">
                                @*@Html.DisplayNameFor(model => model.RefundPortion)*@Refund Portion
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.flightInfo.RefundPortion)
                            </dd>
                        </dl>

                    </div>

                    <hr />
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">Additional Offers</h4>
                        </div>
                        <ul class="list-group">
                            @for (int i = 0; i < Model.offers.Count; i++)
                            {
                                <li class="list-group-item">
                                    <div class="row toggle" id="dropdown-detail-@Model.offers[i].offer.Id" data-toggle="detail-@Model.offers[i].offer.Id">
                                        <div class="col-xs-10">
                                            @Model.offers[i].offer.Name
                                        </div>
                                        <div class="col-xs-2"><i class="fa fa-chevron-down pull-right"></i></div>
                                    </div>
                                    <div id="detail-@Model.offers[i].offer.Id">
                                        <hr></hr>
                                        <div class="container">
                                            <div class="fluid-row">
                                                <div class="col-xs-1">
                                                    Detail:
                                                </div>
                                                <div class="col-xs-5">
                                                    @Model.offers[i].offer.Description
                                                </div>
                                                <div class="col-xs-1">
                                                    Price:
                                                </div>
                                                <div class="col-xs-5">
                                                    @Model.offers[i].offer.Price
                                                </div>
                                                <div class="col-xs-1">
                                                    Quantity:
                                                </div>
                                                <div class="col-xs-5">
                                                    <div class="input-group">
                                                        <span class="input-group-btn">
                                                            <button type="button" class="quantity-left-minus btn btn-danger btn-number" data-type="minus" data-field="">
                                                                <span class="glyphicon glyphicon-minus"></span>
                                                            </button>
                                                        </span>
                                                        @Html.HiddenFor(model => model.offers[i].offer.Id)
                                                        @Html.TextBoxFor(model => model.offers[i].quantity, new { id = "quantity", @class = "form-control input-number", min ="0", max="100"})
                                                        <span class="input-group-btn">
                                                            <button type="button" class="quantity-right-plus btn btn-success btn-number" data-type="plus" data-field="">
                                                                <span class="glyphicon glyphicon-plus"></span>
                                                            </button>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>

                    <hr />
                    <p style="color:crimson"> @ViewData["Err"]</p>

                    <div class="form-group">
                        <label id="type" class="control-label"> Class :  </label>
                        <select class="control-label" id="type">
                            @foreach (var item in Model.flightInfo.Offers.Where(x => x.type == 0).ToList())
                            {
                                <option value="@item.Id"
                                        data-price="@item.Price"
                                        data-name="@item.Name"
                                        data-descriptipn="@item.Description">
                                    @(item.Name + " " + item.Price + "TL")
                                </option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="countOfSeats" class="control-label"> Adult(s): </label>
                        <input type="number" id="countOfSeats" name="countOfSeats" value="0" min="0" />
                    </div>
                    <div class="form-group">
                        <label for="countOfChild" class="control-label"> Child(ren) (Age 2-12): </label>
                        <input type="number" id="countOfChild" name="countOfChild" value="0" min="0" />
                    </div>
                    <div class="form-group">
                        <label for="countOfBaby" class="control-label"> Infant(s) (Age 0-2): </label>
                        <input type="number" id="countOfBaby" name="countOfBaby" value="0" min="0" />
                    </div>
                    <div class="form-group">
                        <h3 class="control-label" id="priceLabel">0</h3>TL
                    </div>
                    <input type="hidden" asp-for="flightInfo.Id" />
                    <input type="submit" value="Confirm" class="btn btn-success" />
                </div>
            </form>

        </div>
    </div>

    <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
    <script src='~/js/jquery.validate.min.js'></script>
    <script>
        function myFunction() {
            var x = document.getElementById("myDIV");
            if (x.style.display === "none") {
                x.style.display = "block";
            } else {
                x.style.display = "none";
            }
        }

        $("#type").change(UpdatePrice);

        $("#countOfSeats").change(UpdatePrice);

        $("#countOfChild").change(UpdatePrice);

        function UpdatePrice() {
            $("#priceLabel").html(parseInt($("select[id=type] option").filter(":selected").attr("data-price")) * ($(".plane").find('input[type=checkbox]:enabled').length - $(".plane").find('input[type=checkbox]:checked:enabled').length));
        }

        $(window).on("load", $(function () {
            $("#Buy").validate({
                rules: {
                    countOfBaby: {
                        required: false,
                        max: function () {
                            return $("#countOfSeats").val();
                        }
                    },
                    countOfSeats: {
                        required: false,
                        min: function () {
                            return $(".plane").find('input[type=checkbox]:enabled').length - $(".plane").find('input[type=checkbox]:checked:enabled').length - $("#countOfChild").val();
                        },
                        max: function () {
                            return $(".plane").find('input[type=checkbox]:enabled').length - $(".plane").find('input[type=checkbox]:checked:enabled').length - $("#countOfChild").val();
                        }
                    },
                    countOfChild: {
                        required: false,
                        min: function () {
                            return $(".plane").find('input[type=checkbox]:enabled').length - $(".plane").find('input[type=checkbox]:checked:enabled').length - $("#countOfSeats").val();
                        },
                        max: function () {
                            return $(".plane").find('input[type=checkbox]:enabled').length - $(".plane").find('input[type=checkbox]:checked:enabled').length - $("#countOfSeats").val();
                        }
                    }
                },
                messages: {
                    countOfBaby: {
                        max: "You can't take more babies then adults!"
                    },
                    countOfSeats: {
                        max: "You did not select enough seats for adults!",
                        min: "You selected more seat than you wanted!!!"
                    },
                    countOfChild: {
                        max: "You did not select enough seats for childs!",
                        min: "You selected more seat than you wanted!!!"
                    }
                },
                submitHandler: function (form) {
                    form.submit();
                }
            })
        }));

        $(document).ready(function () {
            $('[id^=detail-]').hide();
            $('.toggle').click(function () {
                $input = $(this);
                $target = $('#' + $input.attr('data-toggle'));
                $target.slideToggle();
            });

            var quantitiy = 0;
            $('.quantity-right-plus').click(function (e) {

                // Stop acting like a button
                e.preventDefault();
                // Get the field name
                var quantity = parseInt($('#quantity').val());

                // If is not undefined

                $('#quantity').val(quantity + 1);


                // Increment

            });

            $('.quantity-left-minus').click(function (e) {
                // Stop acting like a button
                e.preventDefault();
                // Get the field name
                var quantity = parseInt($('#quantity').val());

                // If is not undefined

                // Increment
                if (quantity > 0) {
                    $('#quantity').val(quantity - 1);
                }
            });
        });
    </script>
</body>

</html>