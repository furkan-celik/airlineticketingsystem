@model IEnumerable<WebApplication1.Models.Flight>

@{
    ViewData["Title"] = "Index";
}

<h2 style="color:lightgrey">Flights</h2>
@if ((await AuthorizationService.AuthorizeAsync(User, "ReqAdmin")).Succeeded)
{
    <p>
        <a asp-action="Create">Create New</a>
        @*<asp:Timer ID="timerTest" runat="server" Interval="1000" OnTick="timerTest_tick"></asp:Timer>

            <asp:UpdatePanel itemid="up" runat="server" UpdateMode="Conditional">

                <ContentTemplate>

                    <asp:Literal ID="litMsg" runat="server">

                    </asp:Literal>
                </ContentTemplate>

                <Triggers>
                    <asp:AsyncPostBackTrigger ControlID="timerTest" EventName="tick">

                    </asp:AsyncPostBackTrigger>
                </Triggers>

            </asp:UpdatePanel>*@
    </p>
}

@using (Html.BeginForm("Index", "Flight", FormMethod.Get))
{

    <br />
    <h4 style="color:lightslategray">Search for Flights</h4>
    <p style="color:crimson"> @ViewData["Err"]</p>
    <div class="row">

        <div class="col-md-4">
            <div class="form-group">
                <a> @Html.DropDownList("dest", ViewData["AirportId"] as SelectList, "From", new { required = "required", @class = "form-control control-label" }) </a>
                <a style="margin:20px"> @Html.DropDownList("arr", ViewData["AirportId"] as SelectList, "To", new { required = "required", @class = "form-control" }) </a>
            </div>

            <div class="form-group">
                <label for="date"></label>
                <input type="date" id="date" class="form-control"
                       name="date" value=@ViewData["Date"]
                       min=@DateTime.Now.ToString("yyyy-MM-dd") max="2100-06-14">
            </div>



            <div class="form-group">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>

}
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.RefundTime)*@Refund Time
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.ResCancelTime)*@Res. Cancel Time
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.RefundPortion)*@Refund Portion
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Date)
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.FlightNo)*@Flight No
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Organizer)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td style="color:lightgrey">
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td style="color:lightgrey">
                        @Html.DisplayFor(modelItem => item.RefundTime)
                    </td>
                    <td style="color:lightgrey">
                        @Html.DisplayFor(modelItem => item.ResCancelTime)
                    </td>
                    <td style="color:lightgrey">
                        @Html.DisplayFor(modelItem => item.RefundPortion)
                    </td>
                    <td style="color:lightgrey">
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td style="color:lightgrey">
                        @Html.DisplayFor(modelItem => item.FlightNo)
                    </td>
                    <td style="color:lightgrey">
                        @Html.DisplayFor(modelItem => item.Organizer.Description)
                    </td>
                    <td>
                        @if ((await AuthorizationService.AuthorizeAsync(User, "ReqAdmin")).Succeeded)
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit </a><label> | </label>
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete </a><label> | </label>

                        }
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
