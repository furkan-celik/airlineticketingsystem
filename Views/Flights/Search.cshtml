@model List<string>
@{
    ViewData["Title"] = "Search";
}

<div class="row">
    <div class="col-md-4">
        <div class="booking-cta">
            <h1>Book your flight today</h1>
            <p>With years of experience in the field</p>
        </div>
    </div>
    <div class="col-md-7 col-md-offset-1">
        <div class="booking-form">
            <div class="form-group">
                <div class="form-checkbox">
                    <label for="one-way">
                        <input type="radio" id="one-way" name="flight-type" onchange="enabled(roundtrip)" checked="checked">
                        <span></span>One way
                    </label>
                    <label for="roundtrip">
                        <input type="radio" id="roundtrip" name="flight-type" onchange="enabled(this)">
                        <span></span>Roundtrip
                    </label>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <span class="form-label">Flying from</span>
                        @Html.DropDownList("arr", new SelectList(
                         Model.Select(x => new { Value = x, Text = x }),//you have to pass data as model. If you use another way you must change this line.
                         "Value",
                         "Text"
                          ), "From",
                         new { required = "required", placeholder = "City or airport", @class = "form-control basicAutoComplete", autocomplete = "on" }
                        )
                        @*@Html.DropDownList("dest", ViewData["AirportId"] as SelectList, "From", new { required = "required", placeholder = "City or airport", @class = "form-control basicAutoComplete", autocomplete = "on" })*@
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <span class="form-label">Flying to</span>
                        @Html.DropDownList("dest", new SelectList(
                        Model.Select(x => new { Value = x, Text = x }),//you have to pass data as model. If you use another way you must change this line.
                        "Value",
                        "Text"
                         ), "To",
                        new { required = "required", placeholder = "City or airport", @class = "form-control basicAutoComplete", autocomplete = "on" }
                       )
                        @*@Html.DropDownList("arr", ViewData["AirportId"] as SelectList, "To", new { required = "required", placeholder = "City or airport", @class = "form-control basicAutoComplete", autocomplete = "on" })*@
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <span class="form-label">Departing</span>
                        <input class="form-control" type="date" id="date"
                               name="date" value=@ViewData["Date"]
                               min=@DateTime.Now.ToString("yyyy-MM-dd") max="2100-06-14" required>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <span class="form-label">Returning</span>
                        <input class="form-control" type="date" id="arrival" value=@ViewData["Date"] min="@DateTime.Now.ToString("yyyy-MM-dd")" disabled="disabled" required>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <span class="form-label">Adults (18+)</span>
                        <input class="form-control" name="numOfAdult" id="numOfAdult" type="number" value="1" min="1" required>
                        <span class="select-arrow"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <span class="form-label">Children (2-12)</span>
                        <input class="form-control" name="numOfChild" id="numOfChild" type="number" value="0" min="0" required>
                        <span class="select-arrow"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <span class="form-label">Travel class</span>
                        <select class="form-control" name="ticketClass" id="ticketClass" required>
                            <option value="0" selected>Select a Class</option>
                            @foreach (var item in ViewData["classes"] as SelectList)
                            {
                                <option value="@item.Value">@item.Text Class</option>
                            }
                        </select>
                        <span class="select-arrow"></span>
                    </div>
                </div>
            </div>
            <div class="form-btn">
                <button class="submit-btn" id="btnSearch">Show flights</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    function enabled(roundtrip) {
        var arrival = document.getElementById("arrival");
        arrival.disabled = roundtrip.checked ? false : true;
        if (!arrival.disabled) {
            arrival.focus();
        }  
    }

    function GiveError(name, value) {
        console.log(name);
        console.log(value);
        if (value == null || value == "" || value == 0) {
            alert(name + " cannot left blank, please select " + name + " to proceed");
            return false;
        }
        return true;
    }

    function CheckReturnDate(date, returnDate) {
        if ($("#roundtrip").is(":checked")) {
            
            if (returnDate == null) {
                alert("Returning date field cannot left blank when two way option is selected! Please select a return date");
                return false;
            }
            if (date >= returnDate) {
                alert("Returning date cannot be earlier than or same as departing date!");
                return false;
            }
        }
            return true;

    }

    var firstTime = true;
    $("#btnSearch").click(function () {
        if (firstTime) {
            firstTime = false;
            $("#btnNextDay").click(nextDayClick);
            $("#btnPrevDay").click(prevDayClick);
        }

        $("#btnNextDay").show();
        $("#btnPrevDay").show();

        var dest = $("#dest").val();
        var arr = $("#arr").val();
        var date = $("#date").val();
        var noAdult = $("#numOfAdult").val();
        var noChild = $("#numOfChild").val();
        var mClass = $("#ticketClass").val();
        var returnDate = new Date(0);

        if ($("#roundtrip").is(":checked")) {
            returnDate = new Date($("#arrival").val());
            alert(returnDate);
        }

        disablePrevDayBtn(new Date(date));
        setDateTexts(new Date(date));

        if (GiveError("Departure", dest) && GiveError("Arrival", arr) && GiveError("Departure Date", date) && GiveError("Adult Number", noAdult) && GiveError("Ticket Class", mClass) && CheckReturnDate(new Date(date), returnDate)) {
            var url = "/Flights/SearchResults?dest=" + dest + "&arr=" + arr + "&date=" + date + "&numOfAdult=" + noAdult + "&numOfChild=" + noChild + "&ticketClass=" + mClass + "&returnDate=" + returnDate.toISOString().substring(0, 10);
            $.get(url, function () { }).done(function (data) {
                $("#modelView .modal-body").html(data);
                $(".pop").modal("show");
            })
                .fail(function () {
                    $("#modelView .modal-body").text("Error!!");
                    $(".pop").modal("show");
                })
        }
    })

    function nextDayClick() {
        var dest = $("#dest").val();
        var arr = $("#arr").val();
        var date = $("#date").val();
        var noAdult = $("#numOfAdult").val();
        var noChild = $("#numOfChild").val();
        var mClass = $("#ticketClass").val();
        var newDate = new Date(Date.parse(date) + 86400000);
        var returnDate = new Date(0);

        if ($("#roundtrip").prop("checked")) {
            returnDate = new Date($("#arrival").val());
            if (returnDate == newDate) {
                returnDate = new Date(returnDate + 86400000);
            }
        }

        disablePrevDayBtn(newDate);
        setDateTexts(newDate);

        $("#date").val(newDate.toISOString().substring(0, 10));
        date = $("#date").val();
        var url = "/Flights/SearchResults?dest=" + dest + "&arr=" + arr + "&date=" + date + "&numOfAdult=" + noAdult + "&numOfChild=" + noChild + "&ticketClass=" + mClass + "&returnDate=" + returnDate.toISOString().substring(0, 10);
        $.get(url, function () { }).done(function (data) {
            $("#modelView .modal-body").html(data);
            $(".pop").modal("show");
        })
            .fail(function () {
                $("#modelView .modal-body").text("Error!!");
                $(".pop").modal("show");
            })
    }

    function prevDayClick() {
        var dest = $("#dest").val();
        var arr = $("#arr").val();
        var date = $("#date").val();
        var noAdult = $("#numOfAdult").val();
        var noChild = $("#numOfChild").val();
        var mClass = $("#ticketClass").val();
        var newDate = new Date(Date.parse(date) - 86400000);
        var returnDate = new Date(0);

        if ($("#roundtrip").prop("checked")) {
            returnDate = new Date($("#arrival").val());
        }

        disablePrevDayBtn(newDate);
        setDateTexts(newDate);

        $("#date").val(newDate.toISOString().substring(0, 10));
        date = $("#date").val();
        var url = "/Flights/SearchResults?dest=" + dest + "&arr=" + arr + "&date=" + date + "&numOfAdult=" + noAdult + "&numOfChild=" + noChild + "&ticketClass=" + mClass + "&returnDate=" + returnDate.toISOString().substring(0, 10);
        $.get(url, function () { }).done(function (data) {
            $("#modelView .modal-body").html(data);
            $(".pop").modal("show");
        })
            .fail(function () {
                $("#modelView .modal-body").text("Error!!");
                $(".pop").modal("show");
            })
    }

    function disablePrevDayBtn(newDate) {
        if (newDate.toDateString() === new Date().toDateString()) {
            $("#btnPrevDay").attr("disabled", true);
        } else {
            $("#btnPrevDay").attr("disabled", false);
        }
    }

    function setDateTexts(date) {
        var prevDate = new Date(date - 86400000);
        var nextDate = new Date(date + 86400000);

        $("#btnPrevDay").html(prevDate.toDateString());
        $("#btnNextDay").html(nextDate.toDateString());
    }

    $(document).ready(function () {
        //Handles menu drop down
        $('.dropdown-menu').find('form').click(function (e) {
            e.stopPropagation();
        });
    });

</script>